version: '3'

networks:
  backend_network: {}

services:
  database:
    container_name: dsc_database
    image: postgres
    environment:
      PGDATA: /var/lib/postgresql/data/dsc
      POSTGRES_USER: whale
      POSTGRES_PASSWORD: whale
      POSTGRES_DB: whale
    volumes:
      - ./db:/usr/db
      - ./db/migrations/:/docker-entrypoint-initdb.d/
    working_dir: /usr/db
    networks:
      - backend_network
    expose:
      - 5432
    ports:
      - 5432:5432
    restart: on-failure

  products-1:
    container_name: dsc_products-1
    image: distributed-systems-course/products:latest
    ports:
      - 8001:8000
    links:
      - database
    depends_on:
      - database
    networks:
      - backend_network

  products-2:
    container_name: dsc_products-2
    image: distributed-systems-course/products:latest
    ports:
      - 8002:8000
    links:
      - database
    depends_on:
      - database
    networks:
      - backend_network

  users-1:
    container_name: dsc_users-1
    image: distributed-systems-course/users:latest
    ports:
      - 9001:8000
    links:
      - database
    depends_on:
      - database
    networks:
      - backend_network

  users-2:
    container_name: dsc_users-2
    image: distributed-systems-course/users:latest
    ports:
      - 9002:8000
    links:
      - database
    depends_on:
      - database
    networks:
      - backend_network

  postgraphile:
    container_name: dsc_postgraphile
    image: node
    environment:
      DATABASE_URL: postgres://whale:whale@database/whale
      SERVER_PORT: 5000
      JWT_SECRET: whale
    volumes:
      - ./graphql:/usr/server
    working_dir: /usr/server
    expose:
      - 5000
    ports:
      - 5000:5000
    networks:
      - backend_network
    restart: always
    command: npm run dev
    links:
      - database
    depends_on:
      - database
